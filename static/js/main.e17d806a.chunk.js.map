{"version":3,"sources":["AutoFlow/ConfimModal.js","AutoFlow/SuccessModal.js","AutoFlow/ErrorModal.js","AutoFlow/AutoFlow.js","AutoFlow/CustomNodeAddTrigger.js","AutoFlow/CustomNode.js","app/store.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["ShowModal","props","tilte","typeTitle","type","Modal","size","centered","Header","className","Title","id","Body","Footer","Button","onClick","onOk","onCancel","data","indents","i","length","push","useState","viewMore","setViewMore","useEffect","map","item","index","target","href","event","onDragId","nodeTypes","nodeAddTrigger","selected","outline","setOutLine","styleAddTrigger","backgroundColor","textAlign","padding","borderRadius","width","height","boxShadow","style","onMouseEnter","onMouseLeave","position","onAddNode","customNode","hover","setHover","showaction","showAction","nodeBorder","nodeBorderSub","setBorderSub","seeMore","setEditBtn","opacityBtn","opacity","color","textDecoration","icon","typeIcon","onNodeDragStop","node","AutoFlow","store","useStore","useZoomPanHelper","setCenter","zoomIn","zoomOut","focusNode","marginX","marginY","zoom","nodes","getState","x","__rf","y","navigate","useNavigate","document","title","setTypeShowModal","setConfirmModalShow","onAddNodeTrigger","a","randomType","Math","floor","random","onAddNodeTriggerAct","initialElements","label","setRfInstance","setElements","React","flowName","setFlowName","editFlowName","setEditFlowName","ConfirmModalShow","SuccessModalShow","setSuccessModalShow","ErrorModalShow","setErrorModalShow","typeShowModal","yPos","useRef","els","setEls","elsTemp","filter","isNode","useCallback","current","isHover","el","lenght","allNode","addEdgeDefault","countNode","addEdgeNo","addEdgeYes","addEdge","source","Number","arrowHeadType","text","labelStyle","fill","fontWeight","fontSize","labelBgPadding","labelBgBorderRadius","labelBgStyle","elements","onLoad","reactFlowInstance","onElementsRemove","elementsToRemove","removeElements","onConnect","params","defaultZoom","minZoom","maxZoom","left","top","zIndex","background","value","placeholder","onChange","right","marginRight","show","createStore","token","Home","useSelector","state","fetch","method","then","response","json","console","log","scope","description","App","basename","process","exact","path","element","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e17d806a.chunk.js","sourcesContent":["import {Button, Modal} from 'react-bootstrap';\r\nimport { \r\n    BsQuestionCircle\r\n} from \"react-icons/bs\";\r\nexport default function ShowModal  (props) {\r\n    const tilte = props.typeTitle == 1 ? \"Thông báo\" : \"Xác nhận\";\r\n    const type = props.type == 2 ? \"sao chép\" : props.type == 3 ? \"kích hoạt\" : \"xóa\";\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header className=\"model-header-confirm\">\r\n          <Modal.Title id=\"contained-modal-title-vcenter title-confirm\">\r\n             <BsQuestionCircle/>\r\n            <span className=\"title-confirm\">{tilte}</span>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h6>Bạn có chắc chắn muốn {type} hành động này?</h6>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <Button onClick={props.onOk}>Đồng ý</Button>\r\n            <Button className=\"btn-danger\" onClick={props.onCancel}>Hủy bỏ</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }","import {Button, Modal} from 'react-bootstrap';\r\nimport { \r\n    BsQuestionCircle,\r\n    BsCheckCircle\r\n} from \"react-icons/bs\";\r\nimport React, { useEffect, useState } from 'react';\r\nexport default function ShowModal  (props) {\r\n    const tilte = \"Xác nhận\";\r\n    const type = props.type == 1 ? \"kích hoạt\" : props.type == 2 ? \"sao chép\" : \"xóa\";\r\n    const data = [\"https://thanhbach0797.github.io/autoFlowTest\", \"https://thanhbach0797.github.io/autoFlowTest\", \"https://thanhbach0797.github.io/autoFlowTest\", \"https://thanhbach0797.github.io/autoFlowTest\"];\r\n    var indents = [];\r\n    for (var i = 0; i < data.length; i++) {\r\n      indents.push(<span className='indent' key={i}></span>);\r\n    }\r\n    const [viewMore, setViewMore] = useState(false);\r\n    useEffect(()=>{\r\n      setViewMore(false);\r\n    },[])\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className=\"modal-success\"\r\n      >\r\n        <Modal.Header className=\"modal-header-success\">\r\n          <div>\r\n            <button type=\"button\" className=\"btn-close success\" aria-label=\"Close\" onClick={props.onCancel}></button>\r\n          </div>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\" className=\"modal-header-success-icon\">\r\n             <BsCheckCircle className=\"icon-sucess\"/>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"modal-body-success\">\r\n          <p>Bạn đã xóa thành công hành động này.</p>\r\n          <p>Việc xóa hành động sẽ ngừng chạy các liên hệ đang chờ kích hoạt thao tác này.</p>\r\n          {!viewMore ?\r\n            <p>[<a href=\"#\" onClick={(event) => setViewMore(true)}> Xem chi tiết liên hệ ở đây </a>]</p>\r\n          : <div className=\"showMore_model-success\">\r\n              {data.map((item, index) => (\r\n                <div>\r\n                <a target=\"_blank\" href={item} key={index}>{item}</a>\r\n                </div>\r\n              ))}\r\n              [<a href=\"#\" onClick={(event) => setViewMore(false)}> Thu gọn </a>]\r\n          </div>\r\n          }\r\n        </Modal.Body>\r\n      </Modal> \r\n    );\r\n  }","import {Modal} from 'react-bootstrap';\r\nimport { \r\n    BsXCircle\r\n} from \"react-icons/bs\";\r\nexport default function ShowModal  (props) {\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        className=\"modal-success\"\r\n      >\r\n        <Modal.Header className=\"modal-header-success\">\r\n          <div>\r\n            <button type=\"button\" className=\"btn-close success\" aria-label=\"Close\" onClick={props.onCancel}></button>\r\n          </div>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\" className=\"modal-header-success-icon\">\r\n             <BsXCircle className=\"icon-error\"/>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"modal-body-success\">\r\n          <p>Bạn không thể kích hoạt thành công hành động này.</p>\r\n        </Modal.Body>\r\n      </Modal> \r\n    );\r\n  }","import ReactFlow, {\r\n    removeElements,\r\n    isNode,\r\n    Background,\r\n    MiniMap,\r\n    Controls,\r\n    useStore,\r\n    useZoomPanHelper\r\n} from 'react-flow-renderer';\r\nimport React, { useCallback, useState, useRef, useEffect } from \"react\";\r\nimport CustomNode from './CustomNode';\r\nimport NodeAddTrigger from './CustomNodeAddTrigger';\r\nimport { AiOutlineLeft, AiOutlineEdit } from \"react-icons/ai\";\r\nimport ShowConfirmModal from './ConfimModal';\r\nimport ShowSuccessModal from './SuccessModal';\r\nimport ShowErrorModal from './ErrorModal';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst nodeTypes = {\r\n    nodeAddTrigger: NodeAddTrigger,\r\n    customNode: CustomNode,\r\n}\r\nlet onDragId;\r\nconst onNodeDragStop = (event, node) => { onDragId = node.data.id };\r\nconst onNodeDrag = (event, node) => console.log('drag stop', node.data.id);\r\nconst onElementClick = (event, element) => console.log('click', element);\r\n\r\nconst AutoFlow = () => {\r\n    const store = useStore();\r\n    const { zoomIn, zoomOut, setCenter } = useZoomPanHelper();\r\n\r\n    const focusNode = (marginX, marginY, zoom) => {\r\n        const { nodes } = store.getState();\r\n        if (nodes.length) {\r\n            const node = nodes[nodes.length - 1];\r\n\r\n            const x = node.__rf.position.x + node.__rf.width / 2 - marginX;\r\n            const y = node.__rf.position.y + node.__rf.height / 2 - marginY;\r\n            // const zoom = 1;\r\n\r\n            setCenter(x, y, zoom);\r\n        }\r\n    };\r\n    \r\n    \r\n    const navigate = useNavigate();\r\n    const navigateAct = () => {\r\n        navigate(\"/\")\r\n    }\r\n    document.title = \"Zetamail - \" + \"AutoFlow - Test\";\r\n    const onClick = (id, type) => {\r\n        switch (type) {\r\n            case 1: // edit trigger\r\n                break;\r\n            case 2:  // copy trigger\r\n            case 3:  // fire trigger\r\n            case 4:  // delete trigger\r\n                setTypeShowModal(type);\r\n                setConfirmModalShow(true)\r\n                break;\r\n        }\r\n        // if (type == 1) {\r\n        //     addNode()\r\n        // } else {\r\n        //     delectNode(id);\r\n        // }\r\n    };\r\n\r\n    const onAddNodeTrigger = async (id) => {\r\n        if (onDragId == id) {\r\n            onDragId = \"\";\r\n        } else {\r\n            // let data = {\r\n            //     onClick: onClick,\r\n            //     label: \"CustomNode\",\r\n            //     id: \"1\",\r\n            //     showAction: false,\r\n            //     typeIcon: 2,\r\n            // }\r\n            let data = {};\r\n            let randomType = Math.floor(Math.random() * 7) + 1\r\n            data.typeIcon = randomType;\r\n            let position = { x: 0, y: 400 }\r\n            onAddNodeTriggerAct(id, data);\r\n        }\r\n    };\r\n\r\n    const initialElements = [\r\n        {\r\n            id: \"0\",\r\n            type: \"nodeAddTrigger\",\r\n            data: {\r\n                onAddNode: onAddNodeTrigger,\r\n                label: \"CustomNode\",\r\n                id: \"0\",\r\n                showAction: false,\r\n            },\r\n            position: { x: 100, y: 100 }\r\n        },\r\n        // {\r\n        //     id: \"2\",\r\n        //     type: \"nodeAddTrigger\",\r\n        //     data: {\r\n        //         onAddNode: onAddNodeTrigger,\r\n        //         label: \"CustomNode\",\r\n        //         id: \"2\",\r\n        //         showAction: false,\r\n        //     },\r\n        //     position: { x: 600, y: 400 }\r\n        // },\r\n        // {\r\n        //     id: \"3\",\r\n        //     type: \"nodeAddTrigger\",\r\n        //     data: {\r\n        //         onAddNode: onAddNodeTrigger,\r\n        //         label: \"CustomNode\",\r\n        //         id: \"3\",\r\n        //         showAction: false,\r\n        //     },\r\n        //     position: { x: -300, y: 400 }\r\n        // },\r\n        // {\r\n        //     id: \"e1-2\",\r\n        //     //type:'customEdge',\r\n        //     type: 'smoothstep',\r\n        //     data: { text: 'custom edge' },\r\n        //     label: 'Yes',\r\n        //     labelStyle: { fill: '#1fa792', fontWeight: 700, fontSize: 14 },\r\n        //     labelBgPadding: [8, 4],\r\n        //     labelBgBorderRadius: 4,\r\n        //     labelBgStyle: { fill: '#83ddd2'},\r\n        //     arrowHeadType: 'arrow',\r\n        //     source:\"1\",\r\n        //     target: \"2\"\r\n        // },\r\n        // {\r\n        //     id: \"e1-3\",\r\n        //     type: 'smoothstep',\r\n        //     data: { text: 'custom edge' },\r\n        //     label: 'No',\r\n        //     labelStyle: { fill: '#d8545b', fontWeight: 700, fontSize: 14 },\r\n        //     labelBgPadding: [8, 4],\r\n        //     labelBgBorderRadius: 4,\r\n        //     labelBgStyle: { fill: '#f6abae'},\r\n        //     arrowHeadType: 'arrow',\r\n        //     source:\"1\",\r\n        //     target: \"3\"\r\n        // },\r\n        // {\r\n        //     id: \"4\",\r\n        //     type: \"customNode\",\r\n        //     data: {\r\n        //         onClick: onClick,\r\n        //         label: \"CustomNode\",\r\n        //         id: \"1\",\r\n        //         showAction: false,\r\n        //         typeIcon: 2\r\n        //     },\r\n        //     position: { x: 600, y: 100 }\r\n        // },\r\n        // {\r\n        //     id: \"5\",\r\n        //     type: \"customNode\",\r\n        //     data: {\r\n        //         onClick: onClick,\r\n        //         label: \"CustomNode\",\r\n        //         id: \"1\",\r\n        //         showAction: false,\r\n        //         typeIcon: 3\r\n        //     },\r\n        //     position: { x: 1100, y: 100 }\r\n        // },\r\n        // {\r\n        //     id: \"6\",\r\n        //     type: \"customNode\",\r\n        //     data: {\r\n        //         onClick: onClick,\r\n        //         label: \"CustomNode\",\r\n        //         id: \"1\",\r\n        //         showAction: false,\r\n        //         typeIcon: 4\r\n        //     },\r\n        //     position: { x: 1600, y: 100 }\r\n        // },\r\n        // {\r\n        //     id: \"7\",\r\n        //     type: \"customNode\",\r\n        //     data: {\r\n        //         onClick: onClick,\r\n        //         label: \"CustomNode\",\r\n        //         id: \"1\",\r\n        //         showAction: false,\r\n        //         typeIcon: 5\r\n        //     },\r\n        //     position: { x: 2100, y: 100 }\r\n        // },\r\n        // {\r\n        //     id: \"8\",\r\n        //     type: \"customNode\",\r\n        //     data: {\r\n        //         onClick: onClick,\r\n        //         label: \"CustomNode\",\r\n        //         id: \"1\",\r\n        //         showAction: false,\r\n        //         typeIcon: 6\r\n        //     },\r\n        //     position: { x: 2600, y: 100 }\r\n        // },\r\n    ]\r\n    const [rfInstance, setRfInstance] = useState(null);\r\n    const [elements, setElements] = useState(initialElements);\r\n    const onElementsRemove = (elementsToRemove) => setElements((els) => removeElements(elementsToRemove, els));\r\n    const onConnect = (params) => setElements((els) => { addEdge(params, els) });\r\n    const onLoad = (reactFlowInstance) => setRfInstance(reactFlowInstance);\r\n    const [flowName, setFlowName] = React.useState(\"\");\r\n    const [editFlowName, setEditFlowName] = React.useState(false);\r\n    const [ConfirmModalShow, setConfirmModalShow] = React.useState(false);\r\n    const [SuccessModalShow, setSuccessModalShow] = React.useState(false);\r\n    const [ErrorModalShow, setErrorModalShow] = React.useState(false);\r\n    const [typeShowModal, setTypeShowModal] = React.useState(0);\r\n    const yPos = useRef(0);\r\n    \r\n    let [els, setEls] = useState([{}]);\r\n    useEffect(()=>{\r\n        const elsTemp = els.filter((els) => isNode(els));\r\n        if(elsTemp.length >= 3 && elsTemp[elsTemp.length - 3].data.typeIcon == 7){\r\n            focusNode(200, 200, 0.8);\r\n        }else if (elsTemp.length > 1){\r\n            focusNode(-200, 200, 0.8);\r\n        }else{\r\n            focusNode(-100, -100, 1.5);\r\n        }\r\n    },[els]);\r\n    useEffect(() => {\r\n        setEls(initialElements);\r\n    }, []);\r\n    \r\n\r\n    const addNode = useCallback(() => {\r\n        setEls((els) => {\r\n            return [\r\n                ...els,\r\n                {\r\n                    id: els.length + \"\",\r\n                    type: \"customNode\",\r\n                    data: {\r\n                        onClick: onClick,\r\n                        label: \"CustomNode\",\r\n                        id: els.length + \"\",\r\n                        showAction: false,\r\n                        typeIcon: 2\r\n                    },\r\n                    position: { x: 100, y: yPos.current }\r\n                }\r\n            ];\r\n        });\r\n    }, []);\r\n\r\n    const onHoverNodeact = useCallback((id, isHover) => {\r\n        setEls((els) => {\r\n            return els.map((el) => {\r\n                if (el.id == id) {\r\n                    el.data = {\r\n                        ...el.data,\r\n                        isHover: isHover\r\n                    };\r\n                }\r\n                return el;\r\n            });\r\n        });\r\n    }, []);\r\n    const onAddNodeTriggerAct = useCallback((id, data) => {\r\n\r\n\r\n        setEls((els) => {\r\n            return els.map((el) => {\r\n                if (el.id == id) {\r\n                    el.type = 'customNode';\r\n                    el.data = {\r\n                        ...el.data,\r\n                        onClick: onClick,\r\n                        typeIcon: data.typeIcon\r\n                    }\r\n                    el.position = { x: el.position.x - 100, y: el.position.y }\r\n                }\r\n                return el;\r\n            });\r\n        });\r\n        \r\n        if (data.typeIcon != 7) {\r\n            setEls((els) => {\r\n                let node = els.filter((el) => el.id === id);\r\n                const allNode = els.filter((el) => isNode(el));\r\n                let lenght = allNode.length;\r\n                return [\r\n                    ...els,\r\n                    {\r\n                        id: lenght + \"\",\r\n                        type: \"nodeAddTrigger\",\r\n                        data: {\r\n                            onAddNode: onAddNodeTrigger,\r\n                            label: \"CustomNode\",\r\n                            id: lenght + \"\",\r\n                            showAction: false,\r\n                        },\r\n                        position: { x: node[0].position.x + 100, y: node[0].position.y + 500 }\r\n                    }\r\n                ];\r\n            });\r\n            setEls((els) => {\r\n                const allNode = els.filter((el) => isNode(el));\r\n                addEdgeDefault(id, allNode[allNode.length - 1].id + \"\");\r\n                return els;\r\n            });\r\n            \r\n        } else {\r\n            setEls((els) => {\r\n                let node = els.filter((el) => el.id === id);\r\n                const countNode = els.filter((el) => isNode(el)).length;\r\n                return [\r\n                    ...els,\r\n                    {\r\n                        id: countNode + \"\",\r\n                        type: \"nodeAddTrigger\",\r\n                        data: {\r\n                            onAddNode: onAddNodeTrigger,\r\n                            label: \"CustomNodeFalse\",\r\n                            id: countNode + \"\",\r\n                            showAction: false,\r\n                        },\r\n                        position: { x: node[0].position.x - 300, y: node[0].position.y + 500 }\r\n                    },\r\n                    {\r\n                        id: (countNode + 1) + \"\",\r\n                        type: \"nodeAddTrigger\",\r\n                        data: {\r\n                            onAddNode: onAddNodeTrigger,\r\n                            label: \"CustomNodeTrue\",\r\n                            id: (countNode + 1) + \"\",\r\n                            showAction: false,\r\n                        },\r\n                        position: { x: node[0].position.x + 500, y: node[0].position.y + 500 }\r\n                    }\r\n                ];\r\n            });\r\n\r\n            setEls((els) => {\r\n                const allNode = els.filter((el) => isNode(el));\r\n                addEdgeNo(id, allNode[allNode.length - 2].id + \"\");\r\n                addEdgeYes(id, allNode[allNode.length - 1].id + \"\");\r\n                return els;\r\n            });\r\n\r\n        }\r\n    }, []);\r\n    const updateNode = useCallback((id) => {\r\n        setEls((els) => {\r\n            return els.map((el) => {\r\n                if (el.id = '2') {\r\n                    el.id = '1';\r\n                } else {\r\n                    el.id = '2';\r\n                }\r\n                el.data = {\r\n                    ...el.data,\r\n                    label: \"CustomNodebach\" + Math.floor(Math.random() * 2),\r\n                    showAction: Math.floor(Math.random() * 2) ? true : false\r\n                };\r\n                return el;\r\n            });\r\n        });\r\n    }, []);\r\n    const onShowActionsNodeAct = useCallback((id, isHover) => {\r\n        setEls((els) => {\r\n            return els.map((el) => {\r\n                if (el.id == id) {\r\n                    el.data = {\r\n                        ...el.data,\r\n                        showAction: isHover\r\n                    };\r\n                }\r\n                return el;\r\n            });\r\n        });\r\n    }, []);\r\n    const addEdge = useCallback(({ source, target }) => {\r\n        setEls((els) => {\r\n            return [\r\n                ...els,\r\n                {\r\n                    id: Number(els[els.length - 1].id) + 1 + \"\",\r\n                    source,\r\n                    target\r\n                }\r\n            ];\r\n        });\r\n    }, []);\r\n    const addEdgeDefault = (source, target) => {\r\n        setEls((els) => {\r\n            return [\r\n                ...els,\r\n                {\r\n                    id: \"edgde\" + Number(els[els.length - 1].id) + \"\",\r\n                    type: 'smoothstep',\r\n                    arrowHeadType: 'arrow',\r\n                    source,\r\n                    target\r\n                }\r\n            ];\r\n        });\r\n    }\r\n    const addEdgeYes = (source, target) => {\r\n        setEls((els) => {\r\n            return [\r\n                ...els,\r\n                {\r\n                    id: \"edge\" + source + \"-\" + target + \"\",\r\n                    type: 'smoothstep',\r\n                    data: { text: 'custom edge' },\r\n                    label: 'Yes branch',\r\n                    labelStyle: { fill: '#1fa792', fontWeight: 700, fontSize: 18 },\r\n                    labelBgPadding: [8, 4],\r\n                    labelBgBorderRadius: 4,\r\n                    labelBgStyle: { fill: '#83ddd2' },\r\n                    arrowHeadType: 'arrow',\r\n                    source,\r\n                    target\r\n                }\r\n            ];\r\n        });\r\n        // setEls((els) => {\r\n        //     console.log(\"React is awesome!\"); // \"React is awesome!\"\r\n        //     console.log(els); // \"React is awesome!\"\r\n        //     return els\r\n        // });\r\n    }\r\n    const addEdgeNo = (source, target) => {\r\n        setEls((els) => {\r\n            return [\r\n                ...els,\r\n                {\r\n                    id: \"edge\" + source + \"-\" + target + \"\",\r\n                    type: 'smoothstep',\r\n                    data: { text: 'custom edge' },\r\n                    label: 'No branch',\r\n                    labelStyle: { fill: '#d8545b', fontWeight: 700, fontSize: 18 },\r\n                    labelBgPadding: [8, 4],\r\n                    labelBgBorderRadius: 4,\r\n                    labelBgStyle: { fill: '#f6abae' },\r\n                    arrowHeadType: 'arrow',\r\n                    source,\r\n                    target\r\n                }\r\n            ];\r\n        });\r\n    }\r\n    const updatePos = () => {\r\n        setEls((els) => {\r\n            return els.filter((el) => {\r\n                if (isNode(el)) {\r\n                    return {\r\n                        ...el,\r\n                        position: {\r\n                            x: Math.random() * 400,\r\n                            y: Math.random() * 400,\r\n                        },\r\n                    };\r\n                }\r\n                return el;\r\n            });\r\n        });\r\n    };\r\n    const delectNode = (id) => {\r\n        setEls((els) => {\r\n            let arrTemp = [];\r\n            els.forEach((el, index) => {\r\n                if (el.id != id) {\r\n                    arrTemp.push(el);\r\n                }\r\n            });\r\n            return arrTemp;\r\n        });\r\n    };\r\n\r\n    const logToObject = () => console.log(rfInstance.toObject());\r\n    const resetTransform = () => rfInstance.setTransform({ x: 0, y: 0, zoom: 1 });\r\n    return (\r\n        <ReactFlow\r\n            elements={els}\r\n            onLoad={onLoad}\r\n            onElementsRemove={onElementsRemove}\r\n            onNodeDragStop={onNodeDragStop}\r\n            onConnect={onConnect}\r\n            className=\"react-flow-basic-example\"\r\n            defaultZoom={0.5}\r\n            minZoom={0.2}\r\n            maxZoom={4}\r\n            nodeTypes={nodeTypes}\r\n        >\r\n            <Background />\r\n\r\n            <div style={{ position: 'absolute', left: 10, top: 10, zIndex: 4, background: 'white' }}>\r\n                <AiOutlineLeft style={{ 'fontSize': '24px' }} onClick={() => navigateAct()} />\r\n                {editFlowName ?\r\n                    <input style={{ 'marginLeft': '5px' }} value={flowName} type=\"text\" placeholder=\"FlowName\" onChange={(event) => setFlowName(event.target.value)} />\r\n                    :\r\n                    <span style={{ 'marginLeft': '5px' }}>{flowName}</span>\r\n                }\r\n                <AiOutlineEdit style={{ 'fontSize': '24px', 'marginLeft': '5px' }} onClick={(event) => setEditFlowName(!editFlowName)} />\r\n            </div>\r\n            <div style={{ position: 'absolute', right: 10, top: 10, zIndex: 4 }}>\r\n                {/* <button onClick={resetTransform} style={{ marginRight: 5 }}>\r\n                    reset transform\r\n                </button>\r\n                <button onClick={updateNode} style={{ marginRight: 5 }}>\r\n                    change pos\r\n                </button>\r\n                <button onClick={logToObject}>toObject</button> */}\r\n                <button className=\"btn btn-primary\" style={{ marginRight: '5px' }} onClick={() => setConfirmModalShow(true)} >confirm</button>\r\n                <button className=\"btn btn-primary\" style={{ marginRight: '5px' }} onClick={() => setSuccessModalShow(true)}>success</button>\r\n                <button className=\"btn btn-primary\" style={{ marginRight: '5px' }} onClick={() => setErrorModalShow(true)} >error</button>\r\n                <button className=\"btn btn-outline-primary\" style={{ marginRight: '5px' }} onClick={() => setConfirmModalShow(true)} >Lưu</button>\r\n                <button className=\"btn btn-primary\" style={{ width: '100px' }} onClick={(focusNode)}>Lưu và bắt đầu</button>\r\n            </div>\r\n            <ShowConfirmModal\r\n                show={ConfirmModalShow}\r\n                onCancel={() => setConfirmModalShow(false)}\r\n                onOk={() => {\r\n                    setConfirmModalShow(false);\r\n                    setSuccessModalShow(true)\r\n                }}\r\n                type={typeShowModal}\r\n            />\r\n            <ShowSuccessModal\r\n                show={SuccessModalShow}\r\n                onCancel={() => setSuccessModalShow(false)}\r\n            />\r\n            <ShowErrorModal\r\n                show={ErrorModalShow}\r\n                onCancel={() => setErrorModalShow(false)}\r\n            />\r\n            <MiniMap />\r\n            <Controls />\r\n        </ReactFlow>\r\n    );\r\n};\r\n\r\nexport default AutoFlow;","import React, { useEffect, useState } from 'react';\r\nimport { Handle } from 'react-flow-renderer';\r\nexport default ({ data, selected }) => {\r\n    const [outline, setOutLine] = useState(\"\");\r\n    const styleAddTrigger = {\r\n        backgroundColor: '#fafafa',\r\n        textAlign: 'center',\r\n        padding: 20,\r\n        borderRadius: 5,\r\n        width: \"200px\",\r\n        height: \"100px\",\r\n        boxShadow: '2px 2px rgb(143 206 219)',\r\n        outline: outline\r\n    }\r\n    return (\r\n        <div\r\n            style={styleAddTrigger}\r\n            onMouseEnter={() => {\r\n                setOutLine(\"1px solid rgb(143 206 219)\");\r\n            }\r\n            }\r\n            onMouseLeave={() => {\r\n                setOutLine(\"\");\r\n            }\r\n            }\r\n        >\r\n            <Handle type=\"target\" position=\"top\" />\r\n            <div className=\"btn\"\r\n                style={{\r\n                    'height': '100%',\r\n                    'width': '100%',\r\n                    'backgroundColor': 'inherit',\r\n                    'border': 'dashed 1px #afafaf',\r\n                    'display': 'flex',\r\n                    'flexDirection': 'column',\r\n                    'justifyContent': 'center'\r\n                }}\r\n                onClick={(event) => data.onAddNode(data.id)}\r\n            >\r\n                <div style={{\r\n                    'color': '#afafaf'\r\n                }}>\r\n                    Hành động\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        'color': '#656565'\r\n                    }}>\r\n                    +Thêm hành động\r\n                </div>\r\n            </div>\r\n            <Handle type=\"source\" position=\"bottom\" />\r\n        </div>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Handle } from 'react-flow-renderer';\r\n\r\nimport { FiSend } from \"react-icons/fi\";\r\nimport {\r\n    BsDoorOpen,\r\n    BsTrash,\r\n    BsFillCaretDownFill,\r\n    BsFolderPlus,\r\n    BsLink,\r\n    BsCalendarDate,\r\n    BsTrash2,\r\n    BsBoxSeam,\r\n    BsCalendarDay,\r\n    BsDiagram2,\r\n    BsPencil,\r\n    BsClipboard,\r\n    BsCheck2Square,\r\n} from \"react-icons/bs\";\r\n\r\nexport default ({ data, selected }) => {\r\n\r\n    const [hover, setHover] = useState(false);\r\n    const [showaction, showAction] = useState(false);\r\n    const [nodeBorder, setBorder] = useState(\"node-border\");\r\n    const [nodeBorderSub, setBorderSub] = useState(\"node-border-sub\");\r\n    const [seeMore, setSeeMore] = useState(\"node-body3-see-more\");\r\n    const [editBtn, setEditBtn] = useState(0);\r\n\r\n    const opacityBtn = {\r\n        opacity: 1,\r\n        color: 'white',\r\n        textDecoration: hover ? 'underLine' : 'unset'\r\n    }\r\n    const icon = data.typeIcon == 1 ?\r\n        <FiSend />\r\n        : data.typeIcon == 2 ?\r\n            <BsFolderPlus />\r\n            : data.typeIcon == 3 ?\r\n                <BsTrash2 />\r\n                : data.typeIcon == 4 ?\r\n                    <BsBoxSeam />\r\n                    : data.typeIcon == 5 ?\r\n                        <BsCalendarDay />\r\n                        : data.typeIcon == 6 ?\r\n                            <BsFolderPlus />\r\n                            :\r\n                            <BsDiagram2 />\r\n    return (\r\n        <div onMouseEnter={() => {\r\n            setHover(true);\r\n            setBorderSub(\"node-border-sub-hover\");\r\n            setEditBtn(1);\r\n        }\r\n        }\r\n            onMouseLeave={() => {\r\n                setHover(false);\r\n                showAction(false);\r\n                setBorderSub(\"node-border-sub\");\r\n                setEditBtn(0);\r\n            }\r\n            }\r\n            className={nodeBorder}\r\n        >\r\n            <div className={nodeBorderSub}>\r\n                <Handle type=\"target\" position=\"top\" />\r\n                <div className=\"node-header\">\r\n                    <div\r\n                        style={{\r\n                            'display': 'flex',\r\n                            'alignItems': 'center',\r\n                            'color': 'white',\r\n                        }}\r\n                    >\r\n                        <div className=\"header-icon\">{icon}</div>\r\n                        <span style={{\r\n                            'marginLeft': '5px',\r\n                        }}>\r\n                            Giảm giá cho khách hàng quan tâm\r\n                        </span>\r\n                    </div>\r\n                    <div>\r\n                        <div onClick={() => showAction(true)}\r\n                            style={opacityBtn}\r\n                        >\r\n                            <span>Actions</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {showaction ?\r\n                    // <div\r\n                    //     className=\"actions\"\r\n                    // >\r\n                    //     <button className=\"btn btn-outline-primary\" onClick={(event) => onClick(1)}>Edit</button>\r\n                    //     <button className=\"btn btn-danger\" onClick={(event) => onClick(2)}><BsTrash/></button>\r\n                    // </div>\r\n                    <div className=\"actions\">\r\n                        <a className=\"dropdown-item\" onClick={(event) => data.onClick(data.id, 1)} href=\"#\"><BsPencil /> Chỉnh sửa hành động</a>\r\n                        <a className=\"dropdown-item\" onClick={(event) => data.onClick(data.id, 2)} href=\"#\"><BsClipboard /> Sao chép hành động</a>\r\n                        <a className=\"dropdown-item\" onClick={(event) => data.onClick(data.id, 3)} href=\"#\"><BsCheck2Square /> Kíchh hoạt hành động</a>\r\n                        <div className=\"dropdown-divider\" style={{ width: '100%' }}></div>\r\n                        <a className=\"dropdown-item\" onClick={(event) => data.onClick(data.id, 4)} href=\"#\"><BsTrash /> Xóa hành động</a>\r\n                    </div>\r\n                    : null\r\n                }\r\n\r\n                <div className=\"node-body\">\r\n                    <div className=\"node-body2\">\r\n                        <div className=\"node-body3\" className={seeMore}>\r\n                            <div className=\"node-body4\">\r\n                                <div className=\"node-body5\">\r\n                                    <p className=\"action\">\r\n                                        <span>Một chiến dịch email</span>\r\n                                        <strong> \"Tên_chiến_dịch_email\" </strong>\r\n                                        <span> Đã mở </span>\r\n                                        <strong> [Link_xem_nội_dung_chiến dịch]</strong>\r\n                                    </p>\r\n                                    <p className=\"action\">\r\n                                        <span>Thực hiện sau 1 giờ</span>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            {/* <p className=\"action\">\r\n                                <span>Gửi một nội dung email có sẵn</span>\r\n                                <strong> \"Tên_nội_dung_email\" </strong>\r\n                                <span>, </span>\r\n                                <strong> [Xem_Trước]</strong>\r\n                            </p>\r\n                            <p className=\"action\">\r\n                                <span>Kích hoạt / Không kích hoạt</span>\r\n                            </p> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Handle type=\"source\" position=\"bottom\" />\r\n            </div>\r\n            {/* <div>\r\n                <a href=\"\" onClick={()=> setSeeMore(\"\")}>see more</a>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n","import { createStore } from 'redux';\r\n\r\nexport const store = createStore(() => ({\r\n  token:\"6b2dd421bc760e973e154f301cf2b5b404e195ba\"\r\n}));","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { store } from './app/store';\r\nimport { useSelector } from 'react-redux';\r\nconst Home =()=> {\r\n    const listFlow = [\r\n        {\r\n            \"id\": \"61a8cb451bdce65d6d23b7aa\",\r\n            \"user_id\": \"17574\",\r\n            \"title\": \"Flow_Test\",\r\n            \"status\": \"2\",\r\n            \"description\": \"description of auto flowdas\",\r\n            \"list\": \"\",\r\n            \"segment\": \"\",\r\n            \"created_at\": \"2021-12-02 20:33:57\",\r\n            \"updated_at\": \"2021-12-02 20:36:38\"\r\n        }\r\n    ];\r\n    const token = useSelector(state => state.token);\r\n    // console.log(store.getState())\r\n    const requestOptions = {\r\n        method: 'GET',\r\n    };\r\n    fetch('https://app.zetamail.vn/api/autoflow/getall?token='+token+'&p=1&limit=50', requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => {console.log(data);});\r\n    document.title = \"Zetamail - Home\"\r\n    return (\r\n        <div className=\"table-responsive\">\r\n        <table className=\"table no-wrap user-table mb-0\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\" className=\"border-0 text-uppercase font-medium pl-4\">#</th>\r\n              <th scope=\"col\" className=\"border-0 text-uppercase font-medium\">Tên</th>\r\n              <th scope=\"col\" className=\"border-0 text-uppercase font-medium\">Mô tả</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {listFlow.map((value, index)=>(\r\n                <tr key={index}>\r\n                <td className=\"pl-4\">{index}</td>\r\n                <td>\r\n                    <a href={\"/AutoFlow?node-id=\"+value.id}>{value.title}</a>\r\n                </td>\r\n                <td>\r\n                    <span className=\"text-muted\">{value.description}</span>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n            \r\n            \r\n          </tbody>\r\n        </table>\r\n    </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { ReactFlowProvider } from 'react-flow-renderer';\r\nimport './App.css';\r\nimport AutoFlow from './AutoFlow/AutoFlow';\r\nimport Home from './Home';\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n  HashRouter,\r\n  Switch\r\n} from \"react-router-dom\";\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <ReactFlowProvider>\r\n        <HashRouter basename={process.env.PUBLIC_URL}>\r\n          <Routes>\r\n            <Route exact path=\"/\" element={<Home />} />\r\n            <Route exact path=\"/AutoFlow\" element={<AutoFlow />} />\r\n          </Routes>\r\n        </HashRouter>\r\n      </ReactFlowProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}